Terminals unused in grammar

    DOT
    ARR


Grammar

    0 $accept: prog $end

    1 prog: glob_decl_list

    2 glob_decl_list: glob_decl_list fun
    3               | glob_decl_list decl PV
    4               | ε

    5 fun: type fun_head fun_body

    6 fun_head: ID PO PF
    7         | ID PO params PF

    8 params: type ID vir params
    9       | type ID

   10 vir: VIR

   11 fun_body: fao block faf

   12 fao: AO

   13 faf: AF

   14 block: decl_list inst_list

   15 decl_list: decl_list decl PV
   16          | ε

   17 decl: var_decl

   18 var_decl: type vlist

   19 vlist: vlist vir ID
   20      | ID

   21 type: typename

   22 typename: INT
   23         | FLOAT
   24         | VOID

   25 inst_list: inst_list inst
   26          | inst

   27 pv: PV

   28 inst: ao block af
   29     | aff pv
   30     | ret pv
   31     | cond
   32     | loop
   33     | pv

   34 ao: AO

   35 af: AF

   36 aff: ID EQ exp

   37 ret: RETURN exp
   38    | RETURN PO PF

   39 cond: if bool_cond inst elsop

   40 elsop: else inst
   41      | ε

   42 bool_cond: PO exp PF

   43 if: IF

   44 else: ELSE

   45 loop: while while_cond inst

   46 while_cond: PO exp PF

   47 while: WHILE

   48 exp: MOINS exp
   49    | exp PLUS exp
   50    | exp MOINS exp
   51    | exp STAR exp
   52    | exp DIV exp
   53    | PO exp PF
   54    | ID
   55    | app
   56    | NUM
   57    | DEC
   58    | NOT exp
   59    | exp INF exp
   60    | exp SUP exp
   61    | exp EQUAL exp
   62    | exp DIFF exp
   63    | exp AND exp
   64    | exp OR exp

   65 app: fid PO args PF

   66 fid: ID

   67 args: arglist
   68     | ε

   69 arglist: arglist VIR exp
   70        | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <int_value> (258) 56
    DEC <float_value> (259) 57
    INT (260) 22
    FLOAT (261) 23
    VOID (262) 24
    ID <string_value> (263) 6 7 8 9 19 20 36 54 66
    AO (264) 12 34
    AF (265) 13 35
    PO (266) 6 7 38 42 46 53 65
    PF (267) 6 7 38 42 46 53 65
    PV (268) 3 15 27
    VIR (269) 10 69
    RETURN (270) 37 38
    EQ (271) 36
    IF <label_value> (272) 43
    ELSE <label_value> (273) 44
    WHILE <label_value> (274) 47
    AND <label_value> (275) 63
    OR <label_value> (276) 64
    NOT <label_value> (277) 58
    DIFF <label_value> (278) 62
    EQUAL <label_value> (279) 61
    SUP <label_value> (280) 60
    INF <label_value> (281) 59
    PLUS (282) 49
    MOINS (283) 48 50
    STAR (284) 51
    DIV (285) 52
    DOT (286)
    ARR (287)
    IFX (288)
    UNA (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    prog <offset_value> (36)
        on left: 1
        on right: 0
    glob_decl_list <offset_value> (37)
        on left: 2 3 4
        on right: 1 2 3
    fun (38)
        on left: 5
        on right: 2
    fun_head <string_value> (39)
        on left: 6 7
        on right: 5
    params (40)
        on left: 8 9
        on right: 7 8
    vir (41)
        on left: 10
        on right: 8 19
    fun_body (42)
        on left: 11
        on right: 5
    fao (43)
        on left: 12
        on right: 11
    faf (44)
        on left: 13
        on right: 11
    block (45)
        on left: 14
        on right: 11 28
    decl_list <offset_value> (46)
        on left: 15 16
        on right: 14 15
    decl <offset_value> (47)
        on left: 17
        on right: 3 15
    var_decl <offset_value> (48)
        on left: 18
        on right: 17
    vlist <offset_value> (49)
        on left: 19 20
        on right: 18 19
    type <type_value> (50)
        on left: 21
        on right: 5 8 9 18
    typename <type_value> (51)
        on left: 22 23 24
        on right: 21
    inst_list (52)
        on left: 25 26
        on right: 14 25
    pv (53)
        on left: 27
        on right: 29 30 33
    inst (54)
        on left: 28 29 30 31 32 33
        on right: 25 26 39 40 45
    ao (55)
        on left: 34
        on right: 28
    af (56)
        on left: 35
        on right: 28
    aff (57)
        on left: 36
        on right: 29
    ret (58)
        on left: 37 38
        on right: 30
    cond (59)
        on left: 39
        on right: 31
    elsop (60)
        on left: 40 41
        on right: 39
    bool_cond (61)
        on left: 42
        on right: 39
    if (62)
        on left: 43
        on right: 39
    else (63)
        on left: 44
        on right: 40
    loop (64)
        on left: 45
        on right: 32
    while_cond (65)
        on left: 46
        on right: 45
    while (66)
        on left: 47
        on right: 45
    exp <type_value> (67)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 36 37 42 46 48 49 50 51 52 53 58 59 60 61 62 63 64 69 70
    app (68)
        on left: 65
        on right: 55
    fid (69)
        on left: 66
        on right: 65
    args (70)
        on left: 67 68
        on right: 65
    arglist (71)
        on left: 69 70
        on right: 67 69


State 0

    0 $accept: • prog $end

    $default  reduce using rule 4 (glob_decl_list)

    prog            go to state 1
    glob_decl_list  go to state 2


State 1

    0 $accept: prog • $end

    $end  shift, and go to state 3


State 2

    1 prog: glob_decl_list •
    2 glob_decl_list: glob_decl_list • fun
    3               | glob_decl_list • decl PV

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 1 (prog)

    fun       go to state 7
    decl      go to state 8
    var_decl  go to state 9
    type      go to state 10
    typename  go to state 11


State 3

    0 $accept: prog $end •

    $default  accept


State 4

   22 typename: INT •

    $default  reduce using rule 22 (typename)


State 5

   23 typename: FLOAT •

    $default  reduce using rule 23 (typename)


State 6

   24 typename: VOID •

    $default  reduce using rule 24 (typename)


State 7

    2 glob_decl_list: glob_decl_list fun •

    $default  reduce using rule 2 (glob_decl_list)


State 8

    3 glob_decl_list: glob_decl_list decl • PV

    PV  shift, and go to state 12


State 9

   17 decl: var_decl •

    $default  reduce using rule 17 (decl)


State 10

    5 fun: type • fun_head fun_body
   18 var_decl: type • vlist

    ID  shift, and go to state 13

    fun_head  go to state 14
    vlist     go to state 15


State 11

   21 type: typename •

    $default  reduce using rule 21 (type)


State 12

    3 glob_decl_list: glob_decl_list decl PV •

    $default  reduce using rule 3 (glob_decl_list)


State 13

    6 fun_head: ID • PO PF
    7         | ID • PO params PF
   20 vlist: ID •

    PO  shift, and go to state 16

    $default  reduce using rule 20 (vlist)


State 14

    5 fun: type fun_head • fun_body

    AO  shift, and go to state 17

    fun_body  go to state 18
    fao       go to state 19


State 15

   18 var_decl: type vlist •
   19 vlist: vlist • vir ID

    VIR  shift, and go to state 20

    $default  reduce using rule 18 (var_decl)

    vir  go to state 21


State 16

    6 fun_head: ID PO • PF
    7         | ID PO • params PF

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6
    PF     shift, and go to state 22

    params    go to state 23
    type      go to state 24
    typename  go to state 11


State 17

   12 fao: AO •

    $default  reduce using rule 12 (fao)


State 18

    5 fun: type fun_head fun_body •

    $default  reduce using rule 5 (fun)


State 19

   11 fun_body: fao • block faf

    $default  reduce using rule 16 (decl_list)

    block      go to state 25
    decl_list  go to state 26


State 20

   10 vir: VIR •

    $default  reduce using rule 10 (vir)


State 21

   19 vlist: vlist vir • ID

    ID  shift, and go to state 27


State 22

    6 fun_head: ID PO PF •

    $default  reduce using rule 6 (fun_head)


State 23

    7 fun_head: ID PO params • PF

    PF  shift, and go to state 28


State 24

    8 params: type • ID vir params
    9       | type • ID

    ID  shift, and go to state 29


State 25

   11 fun_body: fao block • faf

    AF  shift, and go to state 30

    faf  go to state 31


State 26

   14 block: decl_list • inst_list
   15 decl_list: decl_list • decl PV

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    VOID    shift, and go to state 6
    ID      shift, and go to state 32
    AO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37

    decl       go to state 38
    var_decl   go to state 9
    type       go to state 39
    typename   go to state 11
    inst_list  go to state 40
    pv         go to state 41
    inst       go to state 42
    ao         go to state 43
    aff        go to state 44
    ret        go to state 45
    cond       go to state 46
    if         go to state 47
    loop       go to state 48
    while      go to state 49


State 27

   19 vlist: vlist vir ID •

    $default  reduce using rule 19 (vlist)


State 28

    7 fun_head: ID PO params PF •

    $default  reduce using rule 7 (fun_head)


State 29

    8 params: type ID • vir params
    9       | type ID •

    VIR  shift, and go to state 20

    $default  reduce using rule 9 (params)

    vir  go to state 50


State 30

   13 faf: AF •

    $default  reduce using rule 13 (faf)


State 31

   11 fun_body: fao block faf •

    $default  reduce using rule 11 (fun_body)


State 32

   36 aff: ID • EQ exp

    EQ  shift, and go to state 51


State 33

   34 ao: AO •

    $default  reduce using rule 34 (ao)


State 34

   27 pv: PV •

    $default  reduce using rule 27 (pv)


State 35

   37 ret: RETURN • exp
   38    | RETURN • PO PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 55
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 58
    app  go to state 59
    fid  go to state 60


State 36

   43 if: IF •

    $default  reduce using rule 43 (if)


State 37

   47 while: WHILE •

    $default  reduce using rule 47 (while)


State 38

   15 decl_list: decl_list decl • PV

    PV  shift, and go to state 61


State 39

   18 var_decl: type • vlist

    ID  shift, and go to state 62

    vlist  go to state 15


State 40

   14 block: decl_list inst_list •
   25 inst_list: inst_list • inst

    ID      shift, and go to state 32
    AO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37

    $default  reduce using rule 14 (block)

    pv     go to state 41
    inst   go to state 63
    ao     go to state 43
    aff    go to state 44
    ret    go to state 45
    cond   go to state 46
    if     go to state 47
    loop   go to state 48
    while  go to state 49


State 41

   33 inst: pv •

    $default  reduce using rule 33 (inst)


State 42

   26 inst_list: inst •

    $default  reduce using rule 26 (inst_list)


State 43

   28 inst: ao • block af

    $default  reduce using rule 16 (decl_list)

    block      go to state 64
    decl_list  go to state 26


State 44

   29 inst: aff • pv

    PV  shift, and go to state 34

    pv  go to state 65


State 45

   30 inst: ret • pv

    PV  shift, and go to state 34

    pv  go to state 66


State 46

   31 inst: cond •

    $default  reduce using rule 31 (inst)


State 47

   39 cond: if • bool_cond inst elsop

    PO  shift, and go to state 67

    bool_cond  go to state 68


State 48

   32 inst: loop •

    $default  reduce using rule 32 (inst)


State 49

   45 loop: while • while_cond inst

    PO  shift, and go to state 69

    while_cond  go to state 70


State 50

    8 params: type ID vir • params

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    params    go to state 71
    type      go to state 24
    typename  go to state 11


State 51

   36 aff: ID EQ • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 73
    app  go to state 59
    fid  go to state 60


State 52

   56 exp: NUM •

    $default  reduce using rule 56 (exp)


State 53

   57 exp: DEC •

    $default  reduce using rule 57 (exp)


State 54

   54 exp: ID •
   66 fid: ID •

    PO        reduce using rule 66 (fid)
    $default  reduce using rule 54 (exp)


State 55

   38 ret: RETURN PO • PF
   53 exp: PO • exp PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    PF     shift, and go to state 74
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 75
    app  go to state 59
    fid  go to state 60


State 56

   58 exp: NOT • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 76
    app  go to state 59
    fid  go to state 60


State 57

   48 exp: MOINS • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 77
    app  go to state 59
    fid  go to state 60


State 58

   37 ret: RETURN exp •
   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 37 (ret)


State 59

   55 exp: app •

    $default  reduce using rule 55 (exp)


State 60

   65 app: fid • PO args PF

    PO  shift, and go to state 88


State 61

   15 decl_list: decl_list decl PV •

    $default  reduce using rule 15 (decl_list)


State 62

   20 vlist: ID •

    $default  reduce using rule 20 (vlist)


State 63

   25 inst_list: inst_list inst •

    $default  reduce using rule 25 (inst_list)


State 64

   28 inst: ao block • af

    AF  shift, and go to state 89

    af  go to state 90


State 65

   29 inst: aff pv •

    $default  reduce using rule 29 (inst)


State 66

   30 inst: ret pv •

    $default  reduce using rule 30 (inst)


State 67

   42 bool_cond: PO • exp PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 91
    app  go to state 59
    fid  go to state 60


State 68

   39 cond: if bool_cond • inst elsop

    ID      shift, and go to state 32
    AO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37

    pv     go to state 41
    inst   go to state 92
    ao     go to state 43
    aff    go to state 44
    ret    go to state 45
    cond   go to state 46
    if     go to state 47
    loop   go to state 48
    while  go to state 49


State 69

   46 while_cond: PO • exp PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 93
    app  go to state 59
    fid  go to state 60


State 70

   45 loop: while while_cond • inst

    ID      shift, and go to state 32
    AO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37

    pv     go to state 41
    inst   go to state 94
    ao     go to state 43
    aff    go to state 44
    ret    go to state 45
    cond   go to state 46
    if     go to state 47
    loop   go to state 48
    while  go to state 49


State 71

    8 params: type ID vir params •

    $default  reduce using rule 8 (params)


State 72

   53 exp: PO • exp PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 75
    app  go to state 59
    fid  go to state 60


State 73

   36 aff: ID EQ exp •
   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 36 (aff)


State 74

   38 ret: RETURN PO PF •

    $default  reduce using rule 38 (ret)


State 75

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   53    | PO exp • PF
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PF     shift, and go to state 95
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87


State 76

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   58    | NOT exp •
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    $default  reduce using rule 58 (exp)


State 77

   48 exp: MOINS exp •
   49    | exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    $default  reduce using rule 48 (exp)


State 78

   63 exp: exp AND • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 96
    app  go to state 59
    fid  go to state 60


State 79

   64 exp: exp OR • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 97
    app  go to state 59
    fid  go to state 60


State 80

   62 exp: exp DIFF • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 98
    app  go to state 59
    fid  go to state 60


State 81

   61 exp: exp EQUAL • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 99
    app  go to state 59
    fid  go to state 60


State 82

   60 exp: exp SUP • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 100
    app  go to state 59
    fid  go to state 60


State 83

   59 exp: exp INF • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 101
    app  go to state 59
    fid  go to state 60


State 84

   49 exp: exp PLUS • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 102
    app  go to state 59
    fid  go to state 60


State 85

   50 exp: exp MOINS • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 103
    app  go to state 59
    fid  go to state 60


State 86

   51 exp: exp STAR • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 104
    app  go to state 59
    fid  go to state 60


State 87

   52 exp: exp DIV • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 105
    app  go to state 59
    fid  go to state 60


State 88

   65 app: fid PO • args PF

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    $default  reduce using rule 68 (args)

    exp      go to state 106
    app      go to state 59
    fid      go to state 60
    args     go to state 107
    arglist  go to state 108


State 89

   35 af: AF •

    $default  reduce using rule 35 (af)


State 90

   28 inst: ao block af •

    $default  reduce using rule 28 (inst)


State 91

   42 bool_cond: PO exp • PF
   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PF     shift, and go to state 109
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87


State 92

   39 cond: if bool_cond inst • elsop

    ELSE  shift, and go to state 110

    $default  reduce using rule 41 (elsop)

    elsop  go to state 111
    else   go to state 112


State 93

   46 while_cond: PO exp • PF
   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PF     shift, and go to state 113
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87


State 94

   45 loop: while while_cond inst •

    $default  reduce using rule 45 (loop)


State 95

   53 exp: PO exp PF •

    $default  reduce using rule 53 (exp)


State 96

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   63    | exp AND exp •
   64    | exp • OR exp

    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 63 (exp)


State 97

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp
   64    | exp OR exp •

    AND    shift, and go to state 78
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 64 (exp)


State 98

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   62    | exp DIFF exp •
   63    | exp • AND exp
   64    | exp • OR exp

    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 62 (exp)


State 99

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   61    | exp EQUAL exp •
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 61 (exp)


State 100

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   60    | exp SUP exp •
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 60 (exp)


State 101

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   59    | exp INF exp •
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 59 (exp)


State 102

   49 exp: exp • PLUS exp
   49    | exp PLUS exp •
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87

    $default  reduce using rule 49 (exp)


State 103

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   50    | exp MOINS exp •
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87

    $default  reduce using rule 50 (exp)


State 104

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   51    | exp STAR exp •
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    $default  reduce using rule 51 (exp)


State 105

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   52    | exp DIV exp •
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp

    $default  reduce using rule 52 (exp)


State 106

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp
   70 arglist: exp •

    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 70 (arglist)


State 107

   65 app: fid PO args • PF

    PF  shift, and go to state 114


State 108

   67 args: arglist •
   69 arglist: arglist • VIR exp

    VIR  shift, and go to state 115

    $default  reduce using rule 67 (args)


State 109

   42 bool_cond: PO exp PF •

    $default  reduce using rule 42 (bool_cond)


State 110

   44 else: ELSE •

    $default  reduce using rule 44 (else)


State 111

   39 cond: if bool_cond inst elsop •

    $default  reduce using rule 39 (cond)


State 112

   40 elsop: else • inst

    ID      shift, and go to state 32
    AO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37

    pv     go to state 41
    inst   go to state 116
    ao     go to state 43
    aff    go to state 44
    ret    go to state 45
    cond   go to state 46
    if     go to state 47
    loop   go to state 48
    while  go to state 49


State 113

   46 while_cond: PO exp PF •

    $default  reduce using rule 46 (while_cond)


State 114

   65 app: fid PO args PF •

    $default  reduce using rule 65 (app)


State 115

   69 arglist: arglist VIR • exp

    NUM    shift, and go to state 52
    DEC    shift, and go to state 53
    ID     shift, and go to state 54
    PO     shift, and go to state 72
    NOT    shift, and go to state 56
    MOINS  shift, and go to state 57

    exp  go to state 117
    app  go to state 59
    fid  go to state 60


State 116

   40 elsop: else inst •

    $default  reduce using rule 40 (elsop)


State 117

   49 exp: exp • PLUS exp
   50    | exp • MOINS exp
   51    | exp • STAR exp
   52    | exp • DIV exp
   59    | exp • INF exp
   60    | exp • SUP exp
   61    | exp • EQUAL exp
   62    | exp • DIFF exp
   63    | exp • AND exp
   64    | exp • OR exp
   69 arglist: arglist VIR exp •

    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIFF   shift, and go to state 80
    EQUAL  shift, and go to state 81
    SUP    shift, and go to state 82
    INF    shift, and go to state 83
    PLUS   shift, and go to state 84
    MOINS  shift, and go to state 85
    STAR   shift, and go to state 86
    DIV    shift, and go to state 87

    $default  reduce using rule 69 (arglist)
